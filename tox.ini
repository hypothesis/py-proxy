[pytest]
filterwarnings =
    error
    ; Suppress warnings about an import of `imp` by Pyramid
    ignore:the imp module is deprecated in favour of importlib

xfail_strict=true

[tox]
envlist = tests
skipsdist = true
minversion = 3.8.0
requires =
    tox-pip-extensions
    tox-pyenv
    tox-run-command
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
skip_install = true
setenv =
    dev: NGINX_SERVER={env:NGINX_URL:http://localhost:9083}
    dev: CLIENT_EMBED_URL = {env:CLIENT_EMBED_URL:http://localhost:5000/embed.js}
    dev: LEGACY_VIA_URL = {env:LEGACY_VIA_URL:http://localhost:9080}
    dev: NEW_RELIC_APP_NAME = {env:NEW_RELIC_APP_NAME:via3}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
passenv =
    HOME
    dev: CHROME_EXTENSION_ID
    dev: SENTRY_DSN
    dev: NEW_RELIC_LICENSE_KEY
deps =
    tests: coverage
    {tests,docstrings,checkdocstrings,lint}: beautifulsoup4
    {tests,docstrings,checkdocstrings,lint}: httpretty
    {tests,docstrings,checkdocstrings,lint}: pytest
    {tests,docstrings,checkdocstrings,lint}: factory-boy
    {tests,docstrings,checkdocstrings,lint}: mock
    lint: pylint
    lint: pydocstyle
    {format,checkformatting}: black
    {format,checkformatting}: isort
    coverage: coverage
    docstrings: sphinx-autobuild
    {docstrings,checkdocstrings}: sphinx
    dev: ipython
    dev: ipdb
    docker-compose: docker-compose
    -r requirements.txt
    pip-compile: pip-tools
whitelist_externals =
    dev: gunicorn
    dev: newrelic-admin
commands =
    dev: {posargs:newrelic-admin run-program gunicorn --timeout 0 -b "0.0.0.0:9082" --reload "py_proxy.app:app()"}
    docker-compose: docker-compose {posargs}
    lint: pydocstyle --explain py_proxy
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:py_proxy bin}
    lint: pylint --rcfile=tests/.pylintrc tests
    format: black py_proxy tests
    format: isort --recursive --quiet --atomic py_proxy tests
    checkformatting: black --check py_proxy tests
    checkformatting: isort --recursive --quiet --check-only py_proxy tests
    tests: coverage run -m pytest {posargs:tests/unit/}
    {docstrings,checkdocstrings}: sphinx-apidoc -ePMF -a -H "Dooccsstrinngs!!" --ext-intersphinx --ext-todo --ext-viewcode -o {envtmpdir}/rst .
    docstrings: sphinx-autobuild -BqT -z py_proxy -z tests -b dirhtml {envtmpdir}/rst {envtmpdir}/dirhtml
    checkdocstrings: sphinx-build -qTn -b dirhtml {envtmpdir}/rst {envtmpdir}/dirhtml
    coverage: -coverage combine
    coverage: coverage report
    pip-compile: pip-compile {posargs}
