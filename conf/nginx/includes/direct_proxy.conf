# Pass the server name through when connecting to proxied HTTPS servers.
# I think this is needed to make proxying of some sites work.
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name
proxy_ssl_server_name on;

# Replace the default url-decoded $uri with the $request_uri which is as
# we received it without url-decoding
rewrite ^ $request_uri;

# Redirect Google Drive requests to the API using our key
# Some weird things:
# * A rule that starts with http will _immediately_ issue a proxy_redirect
# * So we seemingly pointlessly capture (https) and replace it
# * This way the _result_ starts with https, but the _rule_ doesn't and we can carry on
# * NGINX will _merge_ queries you add, not replace them unless you put '?' on the end
rewrite ^/proxy/static/(https)://drive.google.com/uc\?id=(.*)&export=download$ $1://www.googleapis.com/drive/v3/files/$2?key=$google_api_key&alt=media? break;

# Remove our URL part off of the front
# The ? at the end means we strip off the args part (which we will add back on later)
# I have no idea why this works to be honest but it seems to
rewrite ^/proxy/static/(.*)$ $1? break;

# The proxy directly to the resulting URL
# Add back on the args which we stripped above so we don't get them twice
proxy_pass $uri$is_args$args;

# If the proxied server returns a redirect response change the URL in the
# response's `Location` header to be proxied through us.
# For example `Location: https://example.com` might get changed to
# `Location: https://via3.hypothes.is/proxy/static/https://example.com`.
# http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect
proxy_redirect ~^(https?:\/\/)(.*)$ $original_scheme://$http_host/proxy/static/$1$2;
proxy_redirect ~^(.*)$ $original_scheme://$http_host/proxy/static/https://$proxy_host$1;
